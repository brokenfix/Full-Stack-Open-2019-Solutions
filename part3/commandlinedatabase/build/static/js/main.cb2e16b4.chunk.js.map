{"version":3,"sources":["Person.js","Search.js","Services.js","Notification.js","App.js","index.js"],"names":["Person","name","number","id","Search","collection","useState","found","setFound","input","setInput","className","value","required","onChange","event","preventDefault","target","trim","filter","i","toLowerCase","includes","placeholder","map","key","url","axios","get","newPerson","post","delete","obj","put","Notification","text","Button","handler","onClick","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","notification","setNotification","useEffect","document","title","services","then","response","data","catch","error","setTimeout","onSubmit","some","window","confirm","foundPerson","find","filtered","concat","type","person","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.cb2e16b4.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Person  = ({name,number})=> <span id={'person'}> {name} : {number}</span>;\n\nexport default Person;","import React, {useState} from \"react\";\nimport Person from \"./Person\";\n\nconst Search = ({collection})=> {\n    const [found , setFound] = useState([]);\n    const [input , setInput] = useState(\"\");\n\n    const inputTextChangeHandler = (event)=> {\n        event.preventDefault();\n        setInput(event.target.value)\n\n        if(event.target.value.trim() === ''){\n            setFound([]);\n            return;\n        }\n        setFound(collection.filter(i => i.name.toLowerCase().includes(event.target.value.toLowerCase())));\n    };\n\n    return (\n        <div className={'search'}>\n            <form id={'searchForm'}>\n                <label className={'labelFilter middleText'}> Filter shown with: </label>\n                <input id={'inputBox'} value={input}required onChange={inputTextChangeHandler} placeholder={'enter text...'}/>\n            </form>\n            <ul>\n            {found.map(i=> <li key={i.number}> <Person name={i.name} number={i.number}/> </li>)}\n            </ul>\n        </div>\n    )\n};\n\nexport default Search;","import axios from 'axios';\n\nconst url = '/api/persons';\n\nconst getAll = () => axios.get(url);\n\nconst add = (newPerson) => axios.post(url, newPerson);\n\nconst delContact = (id) => axios.delete(`${url}/${id}`);\n\nconst update = (id, obj) => axios.put(`${url}/${id}`, obj);\n\nexport default {getAll, add, delContact, update};\n\n","import React from \"react\";\n\nconst Notification = ({text})=> {\n    if (text == null){\n        return null;\n    }\n    return <div className= 'notification'>{text}</div>\n};\n\nexport default Notification;","import React, { useState, useEffect } from 'react'\nimport Person from \"./Person\";\nimport Search from \"./Search\";\nimport services from \"./Services\";\nimport Notification from \"./Notification\";\n\nconst App = () => {\n    const [ persons, setPersons] = useState([])\n    const [ newName, setNewName ] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [notification, setNotification] = useState(null)\n\n    useEffect(() =>{\n        document.title='Phonebook App';\n        services.getAll().then(response => {\n            setPersons(response.data);\n        })\n            .catch(error => {\n                setNotification(\"Error happened while retrieving the Data\");\n                setTimeout(() => setNotification(null));\n            } )\n    },[])\n\n    const textChangeHandler = (event)=>{\n        event.preventDefault()\n        setNewName(event.target.value)\n    }\n\n    const numberChangeHandler = (event)=>{\n        event.preventDefault()\n        setNewNumber(event.target.value)\n    }\n\n    const submitHandler = (event)=>{\n        event.preventDefault()\n        if(persons.some((i)=>i.name===newName)){\n            if(!window.confirm(`${newName} is already present in the phonebook, replace the old number with a new one?`)){\n                return;\n            }\n\n            let foundPerson  = persons.find(i => i.name === newName)\n            services.update(foundPerson.id, {name: newName, number: newNumber})\n                .then(response => {\n                    let filtered = persons.filter( i => i.id !== foundPerson.id)\n                    setPersons(filtered.concat(response.data))\n                    setNotification(`updated ${newName}`)\n                    setTimeout(()=> setNotification(null), 2000);\n                })\n                .catch(() => {\n                    setNotification(\"Note has already been removed\")\n                    setTimeout(() => setNotification(null),2000)\n                });\n        }\n        else{\n            services.add({name: newName, number: newNumber})\n                .then(response => {\n                    setPersons(persons.concat(response.data));\n                    setNotification(`added ${newName}`)\n                    setTimeout(()=> setNotification(null), 2000);\n                })\n                .catch(error => {\n                    setNotification(`Error!! Contact not saved. Please try again later!`)\n                    setTimeout(()=> setNotification(null), 2000);\n\n                })\n        }\n        setNewName('')\n        setNewNumber('')\n    }\n\n    const deleteHandler = (id) => {\n        if(!window.confirm(`would you like to delete ${persons.find(i => i.id === id).name}`)){\n            return;\n        }\n        services.delContact(id)\n            .then(() => setPersons(persons.filter(i => i.id !== id)))\n            .then(() => {\n                setNotification('Contact deleted');\n                setTimeout(() => setNotification(null), 2000)\n\n            })\n            .catch(error => {\n                setNotification(\"Note has already been removed\");\n                setTimeout(() => setNotification(null),2000)\n            })\n    };\n\n    return (\n        <div className={'main'}>\n            <h2 className={'mainHeading'}>Phonebook</h2>\n            <Notification text = {notification}/>\n            <Search collection={persons}/>\n            <h2 className={'heading'}>Add New Contact</h2>\n            <form className={'newContactForm'} onSubmit={submitHandler}>\n                <div id={'equalPartitionDiv'}>\n                    <div className={'line1'}>\n                        <label className={'nameLabel middleText'}> Name: </label> <input id = 'nameInput' required value={newName} onChange={textChangeHandler} placeholder={'Name'}/>\n                    </div>\n\n                    <div className={'line2'}>\n                        <label className={'numberLabel middleText'}> Contact: </label> <input id = 'numberInput' required value={newNumber} onChange={numberChangeHandler} placeholder={'Number/Email'}/>\n                    </div>\n                </div>\n                <div id={'submitButtonDiv'}>\n                    <button id={'submitButton'}  type=\"submit\">Save Contact</button>\n                </div>\n            </form>\n            <h2 className={'heading'}>Saved Contacts</h2>\n            <div className={'contacts'}>\n                {persons.map((person) => <li id={'singleContact'} key = {person.id} > <Person  name={person.name} number={person.number}/>\n                 <Button text={'Delete'} handler={() => deleteHandler(person.id)} /> </li>)}\n            </div>\n        </div>\n    )\n};\n\nconst Button = ({text,handler})=> <button id={'deleteButton'} onClick={handler}>{text}</button>\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}